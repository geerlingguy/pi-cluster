---
- name: Set up static networking configuration.
  hosts: cluster
  gather_facts: false
  become: true

  handlers:
    - name: restart dhcpcd
      ansible.builtin.service:
        name: dhcpcd
        state: restarted

    - name: restart networkmanager
      ansible.builtin.service:
        name: NetworkManager
        state: restarted

  vars_files:
    - ../../config.yml

  tasks:
    - name: Check if using dhcpcd for networking.
      ansible.builtin.stat:
        path: /etc/dhcpcd.conf
      register: dhcpcd_file_result

    - name: Configure static IP address (dhcpcd).
      ansible.builtin.blockinfile:
        path: /etc/dhcpcd.conf
        marker: "# ANSIBLE MANAGED - static ip {mark}"
        block: |
          interface eth0
          static ip_address={{ ipv4_subnet_prefix }}.{{ ip_host_octet }}/24
          static routers={{ ipv4_subnet_prefix }}.1
          static domain_name_servers={{ ipv4_subnet_prefix }}.1
      notify: restart dhcpcd
      when: dhcpcd_file_result.stat.exists

    - name: Configure static IP address (Network Manager).
      community.general.nmcli:
        conn_name: "Wired connection 1"
        ifname: eth0
        type: ethernet
        ip4: "{{ ipv4_subnet_prefix }}.{{ ip_host_octet }}/24"
        gw4: "{{ ipv4_gateway }}"
        dns4: "{{ dns4_servers }}"
        state: present
      notify: restart networkmanager
      when: not dhcpcd_file_result.stat.exists

    - name: Configure hosts file so nodes can see each other by hostname.
      ansible.builtin.blockinfile:
        path: /etc/hosts
        marker: "# ANSIBLE MANAGED - static ip config {mark}"
        block: |
          {% for host in groups['cluster'] %}
          {{ ipv4_subnet_prefix }}.{{ hostvars[host].ip_host_octet }} {{ host }} {{ host | regex_replace('\.local', '') }}
          {% endfor %}